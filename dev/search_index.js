var documenterSearchIndex = {"docs":
[{"location":"#ExpFamilyDistributions-package-1","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"","category":"section"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"ExpFamilyDistributions is a Julia package for using distributions member of the Exponential family. This package is mostly designed to build machine learning Bayesian models. For a general purpose statistical Julia package we recommend to use Distributions.jl.","category":"page"},{"location":"#Authors-1","page":"ExpFamilyDistributions package","title":"Authors","text":"","category":"section"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Lucas Ondel, Brno University of technology, 2020.","category":"page"},{"location":"#Manual-Outline-1","page":"ExpFamilyDistributions package","title":"Manual Outline","text":"","category":"section"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"The package can be installed with the Julia package manager. From the Julia REPL, type ] to enter the Pkg REPL mode and run:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"pkg> add ExpFamilyDistributions","category":"page"},{"location":"#Exponential-Family-super-type-1","page":"ExpFamilyDistributions package","title":"Exponential Family super-type","text":"","category":"section"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"All the distributions provided by this package are members of the exponential family of distribution, i.e. they have the follotwing canonical form:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"p(x) = exp  eta^top T(x) - A(eta) + B(x) ","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"where:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"eta is the natural parameter (scalar or vector)\nT(x) is the sufficient statistic (scalar or vector)\nA(eta) is the log-normalizer (scalar)\nB(x) is the base measure (scalar)","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Practically, the package provide the following abstract type","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"ExpFamilyDistribution","category":"page"},{"location":"#ExpFamilyDistributions.ExpFamilyDistribution","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.ExpFamilyDistribution","text":"abstract type ExpFamilyDistribution end\n\nSupertype for distributions member of the exponential family.\n\n\n\n\n\n","category":"type"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"and each subtype of implements the following interface:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"basemeasure\ngradlognorm\nkldiv\nloglikelihood\nlognorm\nmean\nnaturalparam\nstats\nupdate!","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"basemeasure\ngradlognorm\nkldiv\nlognorm\nloglikelihood\nmean\nnaturalparam\nstats\nupdate!","category":"page"},{"location":"#ExpFamilyDistributions.basemeasure","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.basemeasure","text":"basemeasure(p, x)\n\nReturns the base measure of x for the distribution p.\n\n\n\n\n\n","category":"function"},{"location":"#ExpFamilyDistributions.gradlognorm","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.gradlognorm","text":"gradlognorm(p)\n\nReturns the gradient of the log-normalizer of p w.r.t. its natural parameters.\n\n\n\n\n\n","category":"function"},{"location":"#ExpFamilyDistributions.kldiv","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.kldiv","text":"kldiv(q::T, p::T) where T<:ExpFamilyDistribution\n\nCompute the KL-divergence between two distributions of the same type (i.e. kldiv(Normal, Normal), kldiv(Dirichlet, Dirichlet), ...)\n\n\n\n\n\n","category":"function"},{"location":"#ExpFamilyDistributions.lognorm","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.lognorm","text":"lognorm(p)\n\nReturns the log-normalization constant of p.\n\n\n\n\n\n","category":"function"},{"location":"#ExpFamilyDistributions.loglikelihood","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.loglikelihood","text":"loglikelihood(p, x)\n\nReturns the log-likelihood of x for the distribution p.\n\n\n\n\n\n","category":"function"},{"location":"#ExpFamilyDistributions.mean","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.mean","text":"mean(p)\n\nReturns the mean of the distribution p.\n\n\n\n\n\n","category":"function"},{"location":"#ExpFamilyDistributions.naturalparam","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.naturalparam","text":"naturalparam(p)\n\nReturns the natural parameters of p.\n\n\n\n\n\n","category":"function"},{"location":"#ExpFamilyDistributions.stats","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.stats","text":"stats(p, x)\n\nReturns the sufficient statistics of x for the distribution p.\n\n\n\n\n\n","category":"function"},{"location":"#ExpFamilyDistributions.update!","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.update!","text":"update!(p, η)\n\nUpdates the parameters given a new natural parameter η.\n\n\n\n\n\n","category":"function"},{"location":"#Multivariate-Normal-distribution-1","page":"ExpFamilyDistributions package","title":"Multivariate Normal distribution","text":"","category":"section"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Likelihood:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"mathcalN(mu Sigma) = frac1(2pi)^fracD2  Sigma\n^frac12 exp big -frac12 (x - mu)^top Sigma^-1 (x -\nmu) big","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Terms of the canonical form:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"beginaligned\n    eta = beginbmatrix\n        Sigma^-1 mu \n        -frac12textvec(Sigma^-1)\n    endbmatrix \n\n    T(x) = beginbmatrix\n        x \n        textvec(xx^top)\n    endbmatrix \n\n    A(eta) = frac12 ln Sigma + frac12 mu^top\n        Sigma^-1mu \n\n    B(x) = -fracD2 ln 2pi \n\n    nabla_eta A(eta) = beginbmatrix\n        mu \n        Sigma + mu mu^top\n    endbmatrix\nendaligned","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Normal\nNormalDiag","category":"page"},{"location":"#ExpFamilyDistributions.Normal","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.Normal","text":"mutable struct Normal{T,D} <: ExpFamilyDistribution\n    μ\n    Σ\nend\n\nNormal distribution with full covariance matrix.\n\nConstructors\n\nNormal{T,D}()\n\nwhere T is the encoding type of the parameters and D is the dimension of the support.\n\nNormal(μ[, Σ])\n\nwhere μ is a vector and Σ is an symmetric     matrix.\n\nExamples\n\njulia> Normal{Float32,2}()\nNormal{Float32,2}:\n  μ = Float32[0.0, 0.0]\n  Σ = Float32[1.0 0.0; 0.0 1.0]\n\njulia> Normal([1.0, 1.0])\nNormal{Float64,2}:\n  μ = [1.0, 1.0]\n  Σ = [1.0 0.0; 0.0 1.0]\n\njulia> using LinearAlgebra; Normal([1.0, 1.0], Symmetric([2.0 0.5; 0.5 1.0]))\nNormal{Float64,2}:\n  μ = [1.0, 1.0]\n  Σ = [2.0 0.5; 0.5 1.0]\n\n\n\n\n\n","category":"type"},{"location":"#ExpFamilyDistributions.NormalDiag","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.NormalDiag","text":"mutable struct NormalDiag{T,D} <: ExpFamilyDistribution\n    μ\n    v\nend\n\nNormal distribution with a diagonal covariance matrix. v is the diagonal of the covariance matrix. Note that you can still access the full covariance matrix by using the property Σ.\n\nConstructors\n\nNormalDiag{T,D}()\n\nwhere T is the encoding type of the parameters and D is the dimension of the support.\n\nNormalDiag(μ[, v])\n\nwhere μ is a vector and v is the diagonal of the covariance matrix.\n\nExamples\n\njulia> NormalDiag{Float32, 2}()\nNormalDiag{Float32,2}\n  μ = Float32[0.0, 0.0]\n  v = Float32[1.0, 1.0]\n\njulia> NormalDiag([1.0, 1.0])\nNormalDiag{Float64,2}\n  μ = [1.0, 1.0]\n  v = [1.0, 1.0]\n\njulia> NormalDiag([1.0, 1.0], [2.0, 1.0])\nNormalDiag{Float64,2}\n  μ = [1.0, 1.0]\n  v = [2.0, 1.0]\n\n\n\n\n\n","category":"type"},{"location":"#Gamma-distribution-1","page":"ExpFamilyDistributions package","title":"Gamma distribution","text":"","category":"section"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Likelihood:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"mathcalG(x  alpha beta) = frac1Gamma (alpha)beta^alpha x^alpha - 1 exp  -beta x ","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Terms of the canonical form:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"beginaligned\n    eta = beginbmatrix\n        -beta  \n        alpha\n    endbmatrix \n\n    T(x) = beginbmatrix\n        x \n        ln x\n    endbmatrix \n\n    A(eta) = ln Gamma(alpha) - alpha ln beta \n\n    B(x) = -ln x \n\n    nabla_eta A(eta) = beginbmatrix\n        fracalphabeta \n        psi(alpha) - lnbeta\n    endbmatrix\nendaligned","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Gamma","category":"page"},{"location":"#ExpFamilyDistributions.Gamma","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.Gamma","text":"mutable struct Gamma{T} <: ExpFamilyDistribution\n    α\n    β\nend\n\nGamma distribution.\n\nConstructors\n\nGamma{T}()\n\nwhere T is the encoding type of the parameters.\n\nGamma{T}(α, β)\n\nwhere T is a encoding type of the parameters and α and β are the parameters of the distribution.\n\nExamples\n\njulia> Gamma{Float32}()\nGamma{Float32}:\n  α = 1.0\n  β = 1.0\n\njulia> Gamma{Float64}(1, 2)\nGamma{Float64}:\n  α = 1.0\n  β = 2.0\n\n\n\n\n\n","category":"type"},{"location":"#Dirichlet-distribution-1","page":"ExpFamilyDistributions package","title":"Dirichlet distribution","text":"","category":"section"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Likelihood:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"mathcalD(x  alpha) = fracGamma(sum_i=1^D alpha_i)prod_i=1^DGamma (alpha_i)\n    prod_i=1^D x_i^alpha - 1","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Terms of the canonical form:","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"beginaligned\n    eta = alpha \n\n    T(x) = ln x \n\n    A(eta) = sum_i=1^D ln Gamma(alpha_i) - ln Gamma(sum_i=1^D alpha_i) \n\n    B(x) = -ln x \n\n    nabla_eta A(eta) = beginbmatrix\n        psi(alpha_1) - psi(sum_i=1^D alpha_i) \n        vdots \n        psi(alpha_D) - psi(sum_i=1^D alpha_i) \n    endbmatrix\nendaligned","category":"page"},{"location":"#","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions package","text":"Dirichlet","category":"page"},{"location":"#ExpFamilyDistributions.Dirichlet","page":"ExpFamilyDistributions package","title":"ExpFamilyDistributions.Dirichlet","text":"mutable struct Dirichlet{T,D} <: ExpFamilyDistribution\n    α\nend\n\nDirichlet distribution.\n\nConstructors\n\nDirichlet{T,D}()\n\nwhere T is the encoding type of the parameters and D is the dimension of the support.\n\nDirichlet(α)\n\nwhere T is a encoding type of the parameters and α is a vector of parameters\n\nExamples\n\njulia> Dirichlet{Float32, 2}()\nDirichlet{Float32,2}:\n  α = Float32[1.0, 1.0]\n\njulia> Dirichlet([1.0, 2.0, 3.0])\nDirichlet{Float64,3}:\n  α = [1.0, 2.0, 3.0]\n\n\n\n\n\n","category":"type"}]
}
