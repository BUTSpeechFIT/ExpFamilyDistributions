var documenterSearchIndex = {"docs":
[{"location":"usage/#Usage-1","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/#ExpFamilyDistribution-interface-1","page":"Usage","title":"ExpFamilyDistribution interface","text":"","category":"section"},{"location":"usage/#","page":"Usage","title":"Usage","text":"Every distribution provided by the ExpFamilyDistributions package inherits from the supertype ExpFamilyDistibution and implements the following interface:","category":"page"},{"location":"usage/#","page":"Usage","title":"Usage","text":"Methods Brief description\nbasemeasure(p, X) Returns the base measure of p for each column of X\ngradlognorm(p) Returns the gradient of the log-normalizer of p\nkldiv(q, p) Compute the Kullback-Leibler divergence between q and p\nlognorm(p) Returns the value of the log-normalizer of p\nmean(p) Returns the mean of the distribution p\nnaturalparam(p) Returns the vector of natural parameters of p\nstats(p, X) Returns the matrix of sufficient statistics\nstdparam(p) Returns the standard parameters of p\nupdate!(p, natparam) Update the parameters of p given a vector of natural parameters","category":"page"},{"location":"usage/#","page":"Usage","title":"Usage","text":"In the following, we show a basic demonstration of the interface using a (multivariate) Normal distribution.","category":"page"},{"location":"usage/#","page":"Usage","title":"Usage","text":"julia> using ExpFamilyDistributions\n\njulia> p = Normal{Float64, 2}()\nNormal{Float64,2}\n  μ = [0.0, 0.0]\n  Σ = [1.0 0.0; 0.0 1.0]\n\njulia> q = Normal([1., -1.], [2 0.5; 0.5 1])\nNormal{Float64,2}\n  μ = [1.0, -1.0]\n  Σ = [2.0 0.5; 0.5 1.0]\n\njulia> basemeasure(p, ones(2, 5))\n5-element Array{Float64,1}:\n -1.8378770664093453\n -1.8378770664093453\n -1.8378770664093453\n -1.8378770664093453\n -1.8378770664093453\n\njulia> gradlognorm(p)\n6-element Array{Float64,1}:\n 0.0\n 0.0\n 1.0\n 0.0\n 0.0\n 1.0\n\njulia> kldiv(q, p)\n1.2201921060322882\n\njulia> lognorm(p), lognorm(q)\n(-0.0, 1.4226650368248541)\n\njulia> mean(p)\n2-element Array{Float64,1}:\n 0.0\n 0.0\n\njulia> naturalparam(p)\n6-element Array{Float64,1}:\n  0.0\n  0.0\n -0.5\n -0.0\n -0.0\n -0.5\n\njulia> stats(p, ones(2, 5))\n6×5 Array{Float64,2}:\n 1.0  1.0  1.0  1.0  1.0\n 1.0  1.0  1.0  1.0  1.0\n 1.0  1.0  1.0  1.0  1.0\n 1.0  1.0  1.0  1.0  1.0\n 1.0  1.0  1.0  1.0  1.0\n 1.0  1.0  1.0  1.0  1.0\n\njulia> stdparam(p)\n(μ = [0.0, 0.0], Σ = [1.0 0.0; 0.0 1.0])\n\njulia> update!(q, naturalparam(p))\njulia> q\nNormal{Float64,2}\n  μ = [0.0, 0.0]\n  Σ = [1.0 0.0; 0.0 1.0]","category":"page"},{"location":"usage/#Supported-distributions-1","page":"Usage","title":"Supported distributions","text":"","category":"section"},{"location":"usage/#","page":"Usage","title":"Usage","text":"Julia type Description\nDirichlet{T, D} D-dimensional Dirichlet distribution\nGamma{T, D} D independent Gamma distributions\nNormal{T, D} D-multivariate normal distribution\nNormalDiag{T, D} D-multivariate normal distribution with diagonal covariance matrix","category":"page"},{"location":"usage/#","page":"Usage","title":"Usage","text":"For all the distributions, the T parameter how the parameters are encoded. Note that you cannot compute the KL divergence (kldiv) with distributions having different T.","category":"page"},{"location":"install/#Installation-1","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"install/#Installation-of-Julia-1","page":"Installation","title":"Installation of Julia","text":"","category":"section"},{"location":"install/#","page":"Installation","title":"Installation","text":"The ExpFamilyDistributions package was developped with Julia 1.4.1. If you haven't installed Julia already, follow the instruction here.","category":"page"},{"location":"install/#","page":"Installation","title":"Installation","text":"tip: Tip\nIt is a common practice in Julia to use non-ascii characters while coding such as greek letters or mathematical symbols. We highly recommend to add Julia support to your editor to easily access these special characters. Plugin for vim/neovim and emacs can be found here.","category":"page"},{"location":"install/#Installation-of-ExpFamilyDistributions-1","page":"Installation","title":"Installation of ExpFamilyDistributions","text":"","category":"section"},{"location":"install/#","page":"Installation","title":"Installation","text":"In the Julia REPL prompt, press ] to enther the Pkg REPL and then type:","category":"page"},{"location":"install/#","page":"Installation","title":"Installation","text":"(@v1.4) pkg> add https://github.com/BUTSpeechFIT/ExpFamilyDistributions","category":"page"},{"location":"install/#","page":"Installation","title":"Installation","text":"This will install the package along with its dependencies into your Julia installation.","category":"page"},{"location":"#ExpFamilyDistributions-package-1","page":"Home","title":"ExpFamilyDistributions package","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"ExpFamilyDistributions is a Julia package for using distributions member of the Exponential family. the ExpFamilyDistributions package is mostly designed to build machine learning Bayesian models. For a general purpose statistical Julia package we recommend to use Distributions.jl.","category":"page"},{"location":"#References-1","page":"Home","title":"References","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Lucas Ondel, Brno University of technology. SpeechFeatures: a Julia package for distributions of member of the Exponential family.","category":"page"},{"location":"#Manual-Outline-1","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\"install.md\", \"usage.md\"]","category":"page"}]
}
